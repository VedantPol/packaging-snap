name: xwiki # you probably want to 'snapcraft register <name>'
base: core18 # the base snap is the execution environment for this snap
version: '14.4.1' # just for humans, typically '1.2+git' or '1.3.2'
summary:  XWiki 
description: XWiki offers a generic platform for developing projects and collaborative applications using the wiki paradigm. Platform XWiki Platform is the generic wiki platform offering runtime services for applications built on top of it.

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: strict  # use 'strict' once you have the right plugs and slots
hooks:
  configure:
    plugs: [home]
parts:
  xwiki:
    source: https://nexus.xwiki.org/nexus/content/groups/public/org/xwiki/platform/xwiki-platform-distribution-war/13.10.7/xwiki-platform-distribution-war-13.10.7.war
    source-type: zip
    plugin: dump
    override-build: |
      mkdir xwiki
      mv META-INF xwiki/META-INF
      mv WEB-INF xwiki/WEB-INF
      mv redirect xwiki/redirect
      mv skins xwiki/skins
      mv templates xwiki/templates
      mv resources xwiki/resources
      rm -r xwiki/WEB-INF/hibernate.cfg.xml
      rm -r xwiki/WEB-INF/xwiki.properties
      snapcraftctl build
    organize: 
      xwiki: webapps/xwiki            
    build-packages:
      - wget
      - unzip
      - ca-certificates
      - ca-certificates-java
      - openjdk-11-jre-headless
    stage-packages:
      - openjdk-11-jdk  
    after: [tomcat]
  tomcat:
    plugin: ant
    source: https://svn.apache.org/repos/asf/tomcat/archive/tc9.0.x/trunk/
    source-type: svn
    prime:
      - -webapps/docs
      - -webapps/examples
      - -webapps/manager
      - -webapps/host-manager
      - -webapps/ROOT
    override-build: |
      # echo "install java 10 from ppa"
      # add-apt-repository ppa:linuxuprising/java
      # apt-get update --yes
      # apt-get install --yes oracle-java10-installer
      # apt-get install --yes oracle-java10-set-default
      echo "Pre build steps"
      cp build.properties.default build.properties
      snapcraftctl build
      echo "Post build steps"
      cp -r output/build/* $SNAPCRAFT_PART_INSTALL
      cat <<EOF > $SNAPCRAFT_PART_INSTALL/tomcat-launch
      #!/bin/sh
      export JRE_HOME=\${SNAP}/usr/lib/jvm/java-11-openjdk-amd64
      export JAVA_HOME=\${SNAP}/usr/lib/jvm/java-11-openjdk-amd64
      export CATALINA_HOME=\${SNAP}
      export CATALINA_BASE=\${SNAP_DATA}
      export CATALINA_TMPDIR=/tmp
      cp -rn \${CATALINA_HOME}/conf \${CATALINA_BASE}/
      # this creates a second copy of the webapps directory.
      # No problem but need to see if we can clean up.
      # seems like an organize statement might do the trick.
      cp -rn \${CATALINA_HOME}/webapps \${CATALINA_BASE}/
      exec \${CATALINA_HOME}/bin/catalina.sh run
      EOF
      chmod +x $SNAPCRAFT_PART_INSTALL/tomcat-launch 
      
    stage-packages:
      - libc6
      - libbz2-1.0
      - libgcc1
      - libcomerr2
      - libgcrypt20
      - liblzma5
      - libmount1
      - libncursesw5
      - libselinux1
      - libtinfo5
      - libuuid1
      - libstdc++6
      - libsmartcols1
      - libgpg-error0
      - libblkid1
      - zlib1g
      - libpcre3
      - libsystemd0
  scripts:
    source: ./scripts/
    source-type: local
    plugin: dump
    organize:
      setenv.sh: bin/setenv.sh    
      hibernate.cfg.xml: webapps/xwiki/WEB-INF/hibernate.cfg.xml
      xwiki.properties: webapps/xwiki/WEB-INF/xwiki.properties
      mysql-connector-java-8.0.29.jar: webapps/xwiki/WEB-INF/lib/mysql-connector-java-8.0.29.jar
      show-help: bin/show-help
      start-server: bin/start-server
      start-client: bin/start-client
      tartup: bin/startup
    override-build: |
      sudo chmod +x setup.sh
      chmod +x setenv.sh
      snapcraftctl build  
    after: [xwiki]
  mysql-server:
    override-pull: |
      snapcraftctl pull
      ./stage_binaries.sh
      
    build-packages: [libaio-dev, libmecab-dev, libnuma-dev, libncurses5-dev, wget, zlib1g-dev]
    plugin: dump
    source: ./
    organize:
      staging-files/usr: usr/
    prime:
      - usr/lib/mysql/plugin/mysql_no_login.so
      - usr/lib/mysql/plugin/innodb_engine.so
      - usr/lib/mysql/plugin/mypluglib.so
      - usr/lib/mysql/plugin/locking_service.so
      - usr/lib/mysql/plugin/adt_null.so
      - usr/lib/mysql/plugin/rewriter.so
      - usr/lib/mysql/plugin/keyring_udf.so
      - usr/lib/mysql/plugin/libmemcached.so
      - usr/lib/mysql/plugin/auth_socket.so
      - usr/lib/mysql/plugin/validate_password.so
      - usr/lib/mysql/plugin/semisync_slave.so
      - usr/lib/mysql/plugin/semisync_master.so
      - usr/lib/mysql/plugin/keyring_file.so
      - usr/lib/mysql/plugin/mysqlx.so
      - usr/lib/mysql/plugin/version_token.so
      - usr/lib/mysql/plugin/libpluginmecab.so
      - usr/sbin/mysqld
      - usr/bin/mysqlpump
      - usr/bin/mysql
      - usr/bin/mysql_ssl_rsa_setup
      - usr/bin/my_print_defaults
      - usr/bin/mysqldump
      - usr/bin/mysql_tzinfo_to_sql
      - usr/bin/mysql_upgrade
      - usr/share/mysql/*
    build-packages:
      - libaio1
      - libaio-dev  
    stage-packages:
      - libaio1
      - libmecab2
      - libnuma1
      - libncurses5-dev
      - libncursesw5-dev
      - libaio-dev
      - libtinfo5

      
apps:
  setup:
    command: ./setup.sh
    plugs: [home]
    
  tomcat:
    command: tomcat-launch
    daemon: simple
    plugs: [network, network-bind]
    
  startup:
    command: startup
    plugs:
      - process-control
      - network
      - network-bind
      
  server:
    command: start-server
    plugs:
      - process-control
      - network
      - network-bind
      
  client:
    command: start-client
    plugs:
      - process-control
      - network
      - network-bind
      
  help:
    command: show-help




